name: Copy latest artifacts to releases
  
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
    tags:
      - '*'

jobs:
  linux_binary:
      uses: ./.github/workflows/linux_binary.yml

  mac_binary:
      uses: ./.github/workflows/mac_binary.yml

  windows_binary:
      uses: ./.github/workflows/windows_binary.yml

  release:
    needs: [linux_binary, mac_binary, windows_binary]
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2
        with:
          path: focus-stack
          fetch-depth: "0"
      
      - name: Download artifacts
        run: |
          mkdir -p focus-stack/distrib
          cd focus-stack/distrib
          gh run --repo ${GITHUB_REPOSITORY} download -n 'Focus-stack Mac OS X application'
          gh run --repo ${GITHUB_REPOSITORY} download -n 'Focus-stack Ubuntu 20.04 package'
          gh run --repo ${GITHUB_REPOSITORY} download -n 'Focus-stack Linux x86_64 AppImage'
          gh run --repo ${GITHUB_REPOSITORY} download -n 'Focus-stack Windows binary'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: List artifacts
        run: |
          find focus-stack/distrib
      
      - name: Upload to latest release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/master'
        run: |
          cd focus-stack
          git tag -d latest
          git tag latest
          git push origin --force latest
          cd distrib
          gh api repos/${GITHUB_REPOSITORY}/releases/tags/latest | jq -r '.assets[] | [.url] | @tsv' | xargs -n 1 gh api -X DELETE || true
          gh release upload --repo ${GITHUB_REPOSITORY} --clobber latest *


      - name: Upload to newly created release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          cd focus-stack/distrib
          RELEASE=$(basename ${{github.ref}})
          gh release upload --repo ${GITHUB_REPOSITORY} $RELEASE *
